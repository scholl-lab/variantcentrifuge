name: Documentation Build with SEO

on:
  push:
    branches: [main]
    paths:
      - "docs/**"
      - "variantcentrifuge/**"
      - ".github/workflows/docs-seo.yml"
  pull_request:
    branches: [main]
    paths:
      - "docs/**"
      - "variantcentrifuge/**"
      - ".github/workflows/docs-seo.yml"
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for git timestamps

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install documentation dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r docs/requirements.txt
          pip install -e .

      - name: Build documentation with SEO
        run: |
          cd docs
          make clean
          make html
          echo "Documentation built successfully"

      - name: Validate build output
        run: |
          # Check if essential files were generated
          if [ -f "docs/build/html/index.html" ]; then
            echo "✓ index.html generated"
          else
            echo "✗ index.html not found"
            exit 1
          fi

          # Check if sitemap was generated
          if [ -f "docs/build/html/sitemap.xml" ]; then
            echo "✓ sitemap.xml generated"
            # Basic XML validation
            python -c "
            import xml.etree.ElementTree as ET
            try:
                ET.parse('docs/build/html/sitemap.xml')
                print('✓ sitemap.xml is valid XML')
            except ET.ParseError as e:
                print('✗ sitemap.xml parse error:', e)
                exit(1)
            "
          else
            echo "⚠ sitemap.xml not found (continuing anyway)"
          fi

          # Check if robots.txt was copied
          if [ -f "docs/build/html/robots.txt" ]; then
            echo "✓ robots.txt copied to output"
          else
            echo "⚠ robots.txt not in output (continuing anyway)"
          fi

      - name: Basic SEO validation
        run: |
          # Basic checks that won't fail the build
          echo "=== SEO Validation Report ==="
          
          # Check for structured data
          if grep -q 'application/ld+json' docs/build/html/index.html 2>/dev/null; then
            echo "✓ JSON-LD structured data found"
          else
            echo "⚠ No JSON-LD structured data found"
          fi
          
          # Check for meta description
          if grep -q '<meta name="description"' docs/build/html/index.html 2>/dev/null; then
            echo "✓ Meta description found"
          else
            echo "⚠ Meta description not found"
          fi
          
          # Check for OpenGraph tags
          if grep -q '<meta property="og:' docs/build/html/index.html 2>/dev/null; then
            echo "✓ OpenGraph tags found"
          else
            echo "⚠ OpenGraph tags not found"
          fi

          # Check for canonical URL
          if grep -q '<link rel="canonical"' docs/build/html/index.html 2>/dev/null; then
            echo "✓ Canonical URL found"
          else
            echo "⚠ Canonical URL not found"
          fi

      - name: Generate build report
        if: always()
        run: |
          echo "## Documentation Build Report" > build-report.md
          echo "Generated at: $(date)" >> build-report.md
          echo "" >> build-report.md

          # Count generated files
          HTML_COUNT=$(find docs/build/html -name "*.html" -type f | wc -l)
          echo "- HTML files generated: $HTML_COUNT" >> build-report.md

          # Count pages in sitemap if it exists
          if [ -f "docs/build/html/sitemap.xml" ]; then
            PAGE_COUNT=$(grep -c "<url>" docs/build/html/sitemap.xml 2>/dev/null || echo "0")
            echo "- Pages in sitemap: $PAGE_COUNT" >> build-report.md
          fi

          # Check for key files
          echo "" >> build-report.md
          echo "### Key Files Status" >> build-report.md
          [ -f "docs/build/html/index.html" ] && echo "- ✓ index.html" >> build-report.md || echo "- ✗ index.html" >> build-report.md
          [ -f "docs/build/html/sitemap.xml" ] && echo "- ✓ sitemap.xml" >> build-report.md || echo "- ✗ sitemap.xml" >> build-report.md
          [ -f "docs/build/html/robots.txt" ] && echo "- ✓ robots.txt" >> build-report.md || echo "- ✗ robots.txt" >> build-report.md

      - name: Upload build report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-report
          path: build-report.md

      - name: Setup Pages
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/configure-pages@v4

      - name: Upload artifact
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/build/html

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Submit sitemap to search engines
        if: success()
        run: |
          echo "Submitting sitemap to search engines..."
          # Submit sitemap to Google Search Console (non-blocking)
          curl -s "https://www.google.com/ping?sitemap=https://scholl-lab.github.io/variantcentrifuge/sitemap.xml" || echo "Google sitemap submission failed (non-critical)"

          # Submit to Bing (non-blocking)
          curl -s "https://www.bing.com/ping?sitemap=https://scholl-lab.github.io/variantcentrifuge/sitemap.xml" || echo "Bing sitemap submission failed (non-critical)"
          
          echo "Sitemap submission completed"
